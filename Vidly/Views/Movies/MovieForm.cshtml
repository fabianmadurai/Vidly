@model Vidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["FormType"].ToString() == "New")
{
    <h2>New Movie</h2>
}
else
{
    <h2>Edit Movie</h2>
}


@using (Html.BeginForm("Save", "Movies"))
{
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.Name) :
        @Html.TextBoxFor(c => c.Movie.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.ReleaseDate) :
        @Html.TextBoxFor(c => c.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.DateAdded) :
        @Html.TextBoxFor(c => c.Movie.DateAdded, "{0:d MMM yyyy}", new { @class = "form-control" })
        
    </div>

    <div class="form-group">
        @Html.LabelFor(c => c.Movie.Genre) :
        @* Below is the way to do a dropdown. That's just the way it is. *@
        @Html.DropDownListFor(c => c.Movie.GenreId, new SelectList(Model.Genres, "Id", "Genres"), "Select Genre", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(c => c.Movie.StockNumber) :
        @Html.TextBoxFor(c => c.Movie.StockNumber, new { @class = "form-control" })

    </div>

        @*We need this hiddenfield for the Id. we pass the Id to the Save method and need to identify which movie to edit.*@
        @Html.HiddenFor(c => c.Movie.Id)
        <button type="submit" class="btn btn-primary">Save</button>

}


